{"version":3,"file":"static/js/344.d2c9b97d.chunk.js","mappings":"2QAEaA,EAAY,mCAAG,WAAMC,GAAN,kFACpBC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,cACE,+NALoB,SAQHC,EAAAA,EAAAA,IAAA,6CACiBL,GACtCC,GAVwB,cAQpBK,EARoB,OAYpBC,EAAQD,EAASE,KAZG,kBAanBD,GAbmB,2CAAH,sD,2BCCZE,EAASC,EAAAA,EAAAA,OAAH,sBACNC,EAAOD,EAAAA,EAAAA,IAAH,8DAIJE,EAAYF,EAAAA,EAAAA,IAAH,sBACTG,EAAQH,EAAAA,EAAAA,IAAH,sBACLI,EAAUJ,EAAAA,EAAAA,GAAH,sBACPK,EAAOL,EAAAA,EAAAA,EAAH,sBACJM,EAAWN,EAAAA,EAAAA,EAAH,sBACRO,EAASP,EAAAA,EAAAA,EAAH,sBACNQ,EAAOR,EAAAA,EAAAA,GAAH,+DAIJS,EAAWT,EAAAA,EAAAA,GAAH,qEAIRU,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,kD,SCiDvB,EAnDqB,WAAO,IAAD,IACjBY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEpDC,EAAAA,EAAAA,YAAU,WACRlC,EAAauB,GAASY,MAAK,SAAAC,GACzBT,EAASS,EACV,GACF,GAAE,CAACb,IACJ,IAAIc,EAAS,GAKb,OAJIX,EAAMW,SACRA,EAASX,EAAMW,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAIpD,iCACE,SAAC,KAAD,CAAMC,GAAIZ,EAAaa,QAAvB,UACE,SAACjC,EAAD,yBAEF,UAACG,EAAD,YACE,UAACD,EAAD,YACE,SAACE,EAAD,CACE8B,IACElB,EAAMmB,aAAN,0CACmCnB,EAAMmB,aAE3CC,IAAKpB,EAAMqB,kBAEb,SAAChC,EAAD,UAAUW,EAAMqB,kBAChB,UAAC/B,EAAD,2BAAyC,GAArBU,EAAMsB,cAAmBC,QAAQ,GAArD,QACA,UAAChC,EAAD,wBAAqBS,EAAMwB,aAC3B,UAAChC,EAAD,sBAAiBmB,SAGnB,UAAClB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAYqB,GAAG,OAAf,qBAEF,SAACtB,EAAD,WACE,SAACC,EAAD,CAAYqB,GAAG,UAAf,0BAGJ,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["services/movie-details-API.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const movieDetails = async id => {\n  const options = {\n    method: 'GET',\n    headers: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NDIzZjg0NjRlZGNmNjdiNmIxZGM3ZTc5ZTBjMTQxNCIsInN1YiI6IjY0NmY0OWZiMDcyMTY2MDBkZDY4YjYxNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8dcIbWOLk3O9m3eyavEh53grUtKkiK3URKPgD8_5seQ',\n    },\n  };\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}`,\n    options\n  );\n  const array = response.data;\n  return array;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button``;\nexport const Card = styled.div`\n  margin-top: 20px;\n  width: 400px;\n`;\nexport const Container = styled.div``;\nexport const Image = styled.img``;\nexport const Capture = styled.h2``;\nexport const Vote = styled.p``;\nexport const Overview = styled.p``;\nexport const Genres = styled.p``;\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  margin-right: 20px;\n  font-size: larger;\n`;\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n","/* eslint-disable react/jsx-no-undef */\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { movieDetails } from 'services/movie-details-API';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useRef } from 'react';\nimport {\n  Button,\n  Capture,\n  Genres,\n  Image,\n  Overview,\n  Vote,\n  Container,\n  Card,\n  List,\n  ListItem,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    movieDetails(movieId).then(films => {\n      setMovie(films);\n    });\n  }, [movieId]);\n  let genres = [];\n  if (movie.genres) {\n    genres = movie.genres.map(genre => genre.name).join(', ');\n  }\n\n  return (\n    <>\n      <Link to={backLinkHref.current}>\n        <Button>Go back</Button>\n      </Link>\n      <Container>\n        <Card>\n          <Image\n            src={\n              movie.poster_path &&\n              `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n            }\n            alt={movie.original_title}\n          />\n          <Capture>{movie.original_title}</Capture>\n          <Vote>User score: {(movie.vote_average * 10).toFixed(0)}%</Vote>\n          <Overview>Overview: {movie.overview}</Overview>\n          <Genres>Genres: {genres}</Genres>\n        </Card>\n\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\">Review</StyledLink>\n          </ListItem>\n        </List>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["movieDetails","id","options","method","headers","Authorization","axios","response","array","data","Button","styled","Card","Container","Image","Capture","Vote","Overview","Genres","List","ListItem","StyledLink","Link","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","then","films","genres","map","genre","name","join","to","current","src","poster_path","alt","original_title","vote_average","toFixed","overview","Suspense","fallback"],"sourceRoot":""}