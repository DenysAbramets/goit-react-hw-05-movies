{"version":3,"file":"static/js/610.c794fdd2.chunk.js","mappings":"mQAEaA,EAAgB,mCAAG,WAAMC,GAAN,kFACxBC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,cACE,+NALwB,SAQPC,EAAAA,EAAAA,IAAA,0DAC8BL,EAD9B,gDAErBC,GAV4B,cAQxBK,EARwB,OAYxBC,EAAQD,EAASE,KAZO,kBAavBD,GAbuB,2CAAH,sD,2BCAhBE,EAAiBC,EAAAA,EAAAA,IAAH,sBACdC,EAAOD,EAAAA,EAAAA,KAAH,0CAGJE,EAAQF,EAAAA,EAAAA,MAAH,8HAOLG,EAASH,EAAAA,EAAAA,OAAH,yCAINI,EAAOJ,EAAAA,EAAAA,GAAH,2DAIJK,EAAWL,EAAAA,EAAAA,GAAH,gDAGRM,GAAON,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,mE,SCiCjB,EA3Ce,WAAO,IAAD,EACnB,GAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR7B,EAAiByB,GACdK,MAAK,SAAArB,GAAI,OAAIY,EAASZ,EAAKsB,QAAlB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,EAAOF,IAUX,OACE,UAACb,EAAD,YACE,UAACE,EAAD,CAAMwB,SAVW,SAAAC,GACnBA,EAAEC,iBACF,IAAMrC,EAASoC,EAAEE,OAAOC,SAASvC,OAAOwC,MACxCP,QAAQC,IAAIE,EAAEE,OAAOC,SAASvC,OAAOwC,OACrCjB,EAAgB,CAAEC,MAAOxB,IACzBoC,EAAEE,OAAOC,SAASvC,OAAOwC,MAAQ,EAClC,EAIG,WACE,SAAC5B,EAAD,CACE6B,KAAK,OACLC,KAAK,SACLC,YAAY,yCAEd,SAAC9B,EAAD,CAAQ4B,KAAK,SAAb,wBAGF,SAAC3B,EAAD,UACGK,EAAMyB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,SAAC/B,EAAD,WACE,SAACC,EAAD,CAAM+B,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMvB,GAA1C,SACGmB,KAFUC,EADN,QAUlB,C","sources":["services/movie-search-API.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getSearchResults = async search => {\n  const options = {\n    method: 'GET',\n    headers: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NDIzZjg0NjRlZGNmNjdiNmIxZGM3ZTc5ZTBjMTQxNCIsInN1YiI6IjY0NmY0OWZiMDcyMTY2MDBkZDY4YjYxNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8dcIbWOLk3O9m3eyavEh53grUtKkiK3URKPgD8_5seQ',\n    },\n  };\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1' `,\n    options\n  );\n  const array = response.data;\n  return array;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const MovieContainer = styled.div``;\nexport const Form = styled.form`\n  display: flex;\n`;\nexport const Input = styled.input`\n  margin-bottom: 20px;\n  margin-right: 5px;\n  height: 30px;\n  font-size: larger;\n  width: 300px;\n`;\nexport const Button = styled.button`\n  height: 35px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n`;\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const Film = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getSearchResults } from 'services/movie-search-API';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Button,\n  Film,\n  Form,\n  Input,\n  List,\n  ListItem,\n  MovieContainer,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    getSearchResults(query)\n      .then(data => setFilms(data.results))\n      .catch(error => console.log(error));\n  }, [query, searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const search = e.target.elements.search.value;\n    console.log(e.target.elements.search.value);\n    setSearchParams({ query: search });\n    e.target.elements.search.value = '';\n  };\n\n  return (\n    <MovieContainer>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter name of film you want to find\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n\n      <List>\n        {films.map(({ title, id }) => (\n          <ListItem key={id}>\n            <Film to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Film>\n          </ListItem>\n        ))}\n      </List>\n    </MovieContainer>\n  );\n};\nexport default Movies;\n"],"names":["getSearchResults","search","options","method","headers","Authorization","axios","response","array","data","MovieContainer","styled","Form","Input","Button","List","ListItem","Film","Link","useState","films","setFilms","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","then","results","catch","error","console","log","onSubmit","e","preventDefault","target","elements","value","type","name","placeholder","map","title","id","to","state","from"],"sourceRoot":""}